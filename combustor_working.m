function [combustor_thrust, P4, A4] = combustor_working(P2, com_p_ratios, com_p_ratio_lengths, initial_combustor_height, initial_combustor_width, combustor_expansion_angle)
    % Function to calculate the thrust generated by the combustor
    % Inputs:
    %   P2 - Static pressure at combustor entrance (Pa)
    %   com_p_ratios - Array of pressure ratios along the combustor
    %   com_p_ratio_lengths - Array of distances along the combustor (m)
    %   initial_combustor_height - Initial height of the combustor (m)
    %   initial_combustor_width - Initial width of the combustor (m)
    %   combustor_expansion_angle - Expansion angle of the combustor (degrees)
    % Outputs:
    %   combustor_thrust - Total thrust generated by the combustor (N)
    %   P4 - Static pressure at combustor exit (Pa)
    %   A4 - Cross-sectional area at combustor exit (m^2)

    % Initialize total combustor thrust
    combustor_thrust = 0;

    % Loop through each pressure ratio length to calculate thrust contribution
    for i = 1:length(com_p_ratio_lengths)
        % Calculate the segment length
        if i == 1
            dx = com_p_ratio_lengths(i);
        else
            dx = com_p_ratio_lengths(i) - com_p_ratio_lengths(i - 1);
        end

        % Calculate pressure at the current segment
        p_bar = com_p_ratios(i) * P2;

        % Effective area of the segment
        a_eff = initial_combustor_width * 2 * tand(combustor_expansion_angle) * dx;

        % Add the segment thrust contribution to the total combustor thrust
        combustor_thrust = combustor_thrust + (p_bar * a_eff);
    end

    % Calculate the exit area of the combustor
    A4 = initial_combustor_width * (initial_combustor_height + (2 * tand(combustor_expansion_angle) * 1));

    % Calculate the static pressure at the combustor exit
    P4 = com_p_ratios(end) * P2;


end
